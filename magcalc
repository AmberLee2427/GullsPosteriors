import numpy as np
import pandas as pd

def lightcurve_data_reader(subrun, lc_id, *, folder_path="data"):
    """Read the lightcurve file and compute magnitudes.

    Parameters
    ----------
    subrun : str or int
        Identifier for the subrun used to build the filename.
    lc_id : int
        Identifier of the light curve.
    folder_path : str, optional
        Directory where the ``.det.lc`` files are stored. Defaults to
        ``"data"``.

    Returns
    -------
    list of pandas.DataFrame
        A list containing one dataframe per observatory with columns
        ``['mag', 'mag_err', 'days']``.
    """
    fname = f"OMPLLD_croin_cassan_{subrun}_0_{lc_id}.det.lc"

    with open(f"{folder_path}/{fname}", "r") as f:
        fs = f.readline()
        fs = np.array(fs.split(" ")[1:4]).astype(float)
        f.readline()
        f.readline()
        m_source = f.readline()
        m_source = np.array(m_source.split(" ")[1:4]).astype(float)
    columns = [
        "Simulation_time",
        "measured_relative_flux",
        "measured_relative_flux_error",
        "true_relative_flux",
        "true_relative_flux_error",
        "observatory_code",
        "saturation_flag",
        "best_single_lens_fit",
        "parallax_shift_t",
        "parallax_shift_u",
        "BJD",
        "source_x",
        "source_y",
        "lens1_x",
        "lens1_y",
        "lens2_x",
        "lens2_y",
    ]
    lightcurve_data_df = pd.read_csv(
        f"{folder_path}/{fname}", names=columns, comment="#", sep="\s+"
    )
    lightcurve_data_df["days"] = lightcurve_data_df["BJD"] - 2450000
    lightcurve_list = []
    for observatory_code in range(3):
        obs_data = lightcurve_data_df[
            lightcurve_data_df["observatory_code"] == observatory_code
        ]
        mag_constant = m_source[observatory_code] + 2.5 * np.log10(
            fs[observatory_code]
        )
        mag = (
            -2.5 * np.log10(obs_data.loc[:, "measured_relative_flux"])
            + mag_constant
        )
        mag_err = (
            (2.5 / np.log(10))
            * obs_data.loc[:, "measured_relative_flux_error"]
            / obs_data.loc[:, "measured_relative_flux"]
        )
        obs_data.insert(loc=obs_data.shape[1], column="mag", value=mag)
        obs_data.insert(loc=obs_data.shape[1], column="mag_err", value=mag_err)
        lightcurve_list.append(obs_data[["mag", "mag_err", "days"]])
    return lightcurve_list
